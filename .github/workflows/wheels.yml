name: Platform wheels

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main  
  push:
    branches:
      - main

jobs:
  build:
    name: Build wheels on ${{ matrix.os }} for Python
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Prepare compiler environment for Windows
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-cibw.txt

      - name: Build wheels
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux2010_x86_64:latest
          CIBW_MANYLINUX_I686_IMAGE: quay.io/pypa/manylinux2010_i686:latest
          CIBW_BUILD: cp36-* cp37-* cp38-* cp39-*
          CIBW_SKIP: "*-win32"
          CIBW_BEFORE_ALL_LINUX: >
            yum -y -q --enablerepo=extras install epel-release
            && yum install -y re2-devel ninja-build
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: "auditwheel show {wheel} && auditwheel repair -w {dest_dir} {wheel}"
          CIBW_BEFORE_ALL_MACOS: >
            brew install re2 pybind11 ninja
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=10.09
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: "pip uninstall -y delocate && pip install git+https://github.com/Chia-Network/delocate.git && delocate-listdeps {wheel} && delocate-wheel -w {dest_dir} -v {wheel}"
          CIBW_BEFORE_ALL_WINDOWS: >
            vcpkg update &&
            vcpkg install re2:x64-windows &&
            vcpkg integrate install
          CIBW_ENVIRONMENT_WINDOWS: 'CMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake'
          CIBW_TEST_COMMAND: python -c "import re2"
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build sdist
        run: |
          pip install build
          python -m build -s .

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  check_artifacts:
    needs: [sdist, build]
    defaults:
      run:
        shell: bash
    name: Check artifacts are correct
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2

      # note wheels should be in subdirectory <upload_name>
      - name: Check number of downloaded artifacts
        run: ls -R
